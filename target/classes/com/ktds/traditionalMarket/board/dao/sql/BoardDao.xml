<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<!-- namespace="현재 패키지의 인터페이스명" -->
<mapper namespace="BoardDao">
	<!-- 각 하나의 태그(<insert>,<select>....)마다 이거를 "Mapped Statement"라 한다  -->
	<!-- 이제, 별칭해주기! src/main/resources에 있는 myBatis.xml로 간다. -->
	
	
	<!-- 글 작성하기 -->
	<insert id="insertOneBoard" parameterType="BoardVO">
		INSERT INTO BOARD	(
								BOARD_ID
								, TITLE
								, CONTENT
								, CRT_DATE
								, MDFY_DATE
								, PICTURE
								, MEMBER_ID 
							) 
		VALUES				( 
								'VD-' || TO_CHAR (SYSDATE, 'YYYYMMDDHH24') || '-' || LPAD(BOARD_ID_SEQ.NEXTVAL, 6, '0')
								, #{title}
								, #{content} 
								, SYSDATE
								, SYSDATE 
								, #{picture} 
								, #{memberId}
							)
	</insert>
	
	
	<!-- Join된 query를 쓸 때는 무조건 얘를 써준다. query결과를 객체와 매핑시켜준다. -->
	<resultMap type="BoardVO" id="boardResultMap">
		<id property="boardId" column="BOARD_ID"/>			<!-- PK -->
		<result property="rowNum" column="RNUM" /> 			<!-- 글번호 -->
		<result property="memberId" column="B_MEMBER_ID"/>
		<result property="title" column="TITLE"/>
		<result property="writer" column="WRITER"/>
		<result property="content" column="CONTENT"/>
		<result property="crtDate" column="CRT_DATE"/>
		<result property="mdfyDate" column="MDFY_DATE"/>
		<result property="viewCount" column="VIEW_COUNT"/>
		<result property="recommendCount" column="RECOMMEND_COUNT"/>
		<result property="picture" column="PICTURE"/>
		<result property="deleteBoard" column="DELETE_BOARD"/>
		<!-- 객체가 다른 객체한테 -->
		<!-- property는 BoardVO에 있는 선언한  MemberVO변수명 -->
		<!-- 이렇게 함으로써 BoardVO에 MemberVO를 가지게 됨.-->
		<association property="memberVO" javaType="MemberVO">
			<id property="memberId" column="M_MEMBER_ID"/>
			<result property="name" column="NAME"/>
			<result property="password" column="PASSWORD"/>
			<result property="salt" column="SALT"/>
			<result property="point" column="POINT"/> 
			<result property="membership" column="MEMBERSHIP"/>
			<result property="gender" column="GENDER"/>
			<result property="email" column="EMAIL"/>
			<result property="birth" column="BIRTH"/>
			<result property="loginFailCount" column="LOGIN_FAIL_COUNT"/>
			<result property="loginFailTime" column="LOGIN_FAIL_TIME"/>
		</association>
	</resultMap>
	
	<!-- 해당 글 읽을 시, 조회수 증가시키기 -->
	<update id="updateViewCount" parameterType="string">
		UPDATE	BOARD
		SET		VIEW_COUNT = VIEW_COUNT + 1
		WHERE	BOARD_ID = #{boardId}
	</update>
	
	<select id="selectOneBoard" parameterType="string" resultMap="boardResultMap"><!-- resultType="BoardVO"> -->
		SELECT	B.BOARD_ID
				, B.TITLE
				, B.CONTENT
				, B.CRT_DATE
				, B.MDFY_DATE
				, B.VIEW_COUNT		
				, B.RECOMMEND_COUNT
				, B.PICTURE
				, B.MEMBER_ID B_MEMBER_ID
				, B.DELETE_BOARD
				, M.MEMBER_ID M_MEMBER_ID
				, M.NAME
				, M.PASSWORD
				, M.SALT
				, M.POINT
				, M.MEMBERSHIP
				, M.EMAIL
				, M.BIRTH
				, M.LOGIN_FAIL_COUNT
				, M.LOGIN_FAIL_TIME
		FROM	BOARD B
				, MEMBER M
		WHERE	B.MEMBER_ID = M.MEMBER_ID
		AND	B.BOARD_ID = #{BOARD_ID}		
	</select>
	
	<!-- 게시글 수정하기 -->
	<update id="updateOneBoard" parameterType="BoardVO">
		UPDATE	BOARD
		SET		TITLE = #{title}, CONTENT = #{content}, PICTURE = #{picture}, MDFY_DATE = SYSDATE
		WHERE	BOARD_ID = #{boardId}
		AND		MEMBER_ID = #{memberId}
	</update>
	
	<!-- 게시글 지우기 -->
	<delete id="deleteOneBoard" parameterType="string">
		DELETE	
		FROM	BOARD
		WHERE	BOARD_ID = #{boardId}
	</delete>
	
	<select id="selectAllBoardsCount" parameterType="BoardSearchVO" resultType="_int">
		SELECT	COUNT(1)
		FROM	BOARD B
				, MEMBER M
		WHERE	B.MEMBER_ID = M.MEMBER_ID
		<if test="searchKeyword != null and searchKeyword != ''">
		AND		TITLE LIKE '%' || #{searchKeyword} || '%'
		</if>
	</select>
	
	
	<select id="selectAllBoards" parameterType="BoardSearchVO" resultMap="boardResultMap">
		SELECT	*
		FROM	(
					SELECT	A.*
							, ROWNUM RNUM	<!-- ROWNUM? 오라클에서 지원하는 가상컬럼으로 쿼리의 결과에 1부터 하나씩 증가하여 붙는 컬럼입니다. -->
					FROM	(
								SELECT	B.BOARD_ID
										, B.TITLE
										, B.CONTENT
										, B.CRT_DATE
										, B.MDFY_DATE
										, B.VIEW_COUNT
										, B.RECOMMEND_COUNT
										, B.PICTURE
										, B.MEMBER_ID B_MEMBER_ID
										, B.DELETE_BOARD
										, M.MEMBER_ID M_MEMBER_ID
										, M.NAME
										, M.PASSWORD
										, M.SALT
										, M.POINT
										, M.MEMBERSHIP
										, M.GENDER
										, M.EMAIL
										, M.BIRTH
										, M.LOGIN_FAIL_COUNT
										, M.LOGIN_FAIL_TIME
								FROM	BOARD B
										, MEMBER M
								WHERE	B.MEMBER_ID = M.MEMBER_ID
								<if test="searchKeyword != null and searchKeyword != ''">
									<choose>
										<when test="searchKeyword != null">
											AND		TITLE LIKE '%' || #{searchKeyword} || '%'
										</when>
										<when test="searchKeyword != null">
											AND		B_MEMBER_ID LIKE '%' || #{searchKeyword} || '%'
										</when>
									</choose>
																
								</if>
			<!-- 					<choose>
									<when test="searchTitle != null">
										AND TITLE LIKE '%' || #{searchTitle} || '%'
									</when>
									<when test="searchMemberId != null">
										AND B_MEMBER_ID LIKE '%' || #{searchMemberId} || '%'
									</when>
									<otherwise>
										AND featured = 1
									</otherwise>
								</choose> -->
								
								ORDER	BY BOARD_ID DESC			
							) A
					WHERE	ROWNUM <![CDATA[<=]]> #{endRow} <!-- WHERE	ROWNUM <= #{endRow}: '<'를새로운 태그가 열린줄 알고 에러발생 -->
				)											<!-- <![CDATA[<=]]>: xml문법 -->
		WHERE	RNUM >= #{startRow}
	</select>
	
	
	
	
	<!-- 하나의 게시글을 추천한 회원 정보 추가 -->
	<insert id="insertOneBoardRecommend" parameterType="map">
		INSERT	INTO BOARD_RECOMMEND(
										BOARD_ID 
										, MEMBER_ID
										, CRT_DATE
									)
		VALUES	(
					#{boardId}
					, #{memberId}
					, SYSDATE
				)	
	</insert>
	
	<!-- 하나의 게시글을 추천한 회원 정보 삭제 -->
	<delete id="deleteOneBoardRecommend" parameterType="map">
		DELETE	
		FROM	BOARD_RECOMMEND
		WHERE	BOARD_ID = #{boardId}
		AND		MEMBER_ID = #{memberId}
	</delete>
	
    <!-- 하나의 게시글을 추천 수 
	<update id="updateRecommendCount" parameterType="string">
		UPDATE	BOARD
		SET		RECOMMEND_COUNT = RECOMMEND_COUNT + 1
		WHERE	BOARD_ID = #{boardId}
	</update> -->
	
	<!-- 하나의 게시글을 추천 수 -->
	<select id="selectOneBoardRecommendCount" parameterType="string" resultType="int">
		SELECT	COUNT(1)
		FROM	BOARD_RECOMMEND
		WHERE	BOARD_ID = #{boardId}
	</select>
	
	<!-- 하나의 게시글 삭제여부 --> 
	<update id="updateDeleteOneBoard" parameterType="string">
		UPDATE	BOARD
		SET		DELETE_BOARD = 'Y'
		WHERE	BOARD_ID = #{boardId}
	</update> 
	
	<!-- main페이지에서 최시글 띄어줄 쿼리문 -->
	<select id="selectTenDateBoard" resultMap="boardResultMap">	
		SELECT  B.* 
				, ROWNUM RNUM
		FROM    (
					SELECT	B.BOARD_ID
							, B.TITLE
							, B.CONTENT
							, B.CRT_DATE
							, B.MDFY_DATE
							, B.VIEW_COUNT
							, B.RECOMMEND_COUNT
							, B.PICTURE
							, B.MEMBER_ID B_MEMBER_ID
							, B.DELETE_BOARD
							, M.MEMBER_ID M_MEMBER_ID
							, M.NAME
							, M.PASSWORD
							, M.SALT
							, M.POINT
							, M.MEMBERSHIP
							, M.GENDER
							, M.EMAIL
							, M.BIRTH
							, M.LOGIN_FAIL_COUNT
							, M.LOGIN_FAIL_TIME
					FROM	BOARD B
							, MEMBER M
					WHERE	B.MEMBER_ID = M.MEMBER_ID 
					ORDER BY B.CRT_DATE DESC
				) B
		WHERE   ROWNUM <![CDATA[<=]]> 10
	</select>
	
	<!-- main페이지에서 인기글 띄어줄 쿼리문 -->
	<select id="selectTenRecommendBoard" resultMap="boardResultMap">	
		SELECT  B.* 
				, ROWNUM RNUM
		FROM    (
					SELECT	B.BOARD_ID
							, B.TITLE
							, B.CONTENT
							, B.CRT_DATE
							, B.MDFY_DATE
							, B.VIEW_COUNT
							, B.RECOMMEND_COUNT
							, B.PICTURE
							, B.MEMBER_ID B_MEMBER_ID
							, B.DELETE_BOARD
							, M.MEMBER_ID M_MEMBER_ID
							, M.NAME
							, M.PASSWORD
							, M.SALT
							, M.POINT
							, M.MEMBERSHIP
							, M.GENDER
							, M.EMAIL
							, M.BIRTH
							, M.LOGIN_FAIL_COUNT
							, M.LOGIN_FAIL_TIME
					FROM	BOARD B
							, MEMBER M
					WHERE	B.MEMBER_ID = M.MEMBER_ID 
					ORDER BY B.RECOMMEND_COUNT DESC
				) B
		WHERE   ROWNUM <![CDATA[<=]]> 10
	</select>
	
</mapper>